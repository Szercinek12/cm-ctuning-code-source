{
  "add_target_extension": {
    "static": "exe", 
    "dynamic": "exe"
  }, 
  "build_scripts_uoa": [
    "9738ca3d2555f6eb"
  ], 
  "run_cmds": {
    "encode": {
      "dataset_classes_uoa": [
        "299aad51cc57b8af"
      ], 
      "hot_functions": [
        {
          "percent": "48", 
          "name": "encode_mcu_AC_refine"
        }, 
        {
          "percent": "15", 
          "name": "encode_mcu_AC_first"
        }, 
        {
          "percent": "7", 
          "name": "jpeg_fdct_islow"
        }, 
        {
          "percent": "6", 
          "name": "forward_DCT"
        }, 
        {
          "percent": "5", 
          "name": "rgb_ycc_convert"
        }, 
        {
          "percent": "5", 
          "name": "jpeg_gen_optimal_table"
        }
      ], 
      "run_time": {
        "run_cmd_out1": "tmp-output1.tmp", 
        "run_cmd_main": "-dct int -progressive -opt -outfile tmp-output.tmp $#dataset_path#$$#os_dir_separator#$$#dataset_filename#$", 
        "run_cmd_out2": "tmp-output2.tmp", 
        "run_output_files": [
          "tmp-output.tmp"
        ], 
        "run_correctness_output_files": [
          "tmp-output.tmp", 
          "tmp-output2.tmp"
        ]
      }
    }
  }, 
  "main_language": "c", 
  "clean_scripts_names": {
    "clean": "Universal cleaning"
  }, 
  "cm_classes_uoa": [
    "28ecc0c2a0215b5b", 
    "99ebfa96846f4bc8", 
    "1a8b0e537d8566d6", 
    "dc6b904ae894e1cb", 
    "1a972e86f4b72b84", 
    "4c92c9db21a28cca"
  ], 
  "run_vars_desc": {
    "##CT_REPEAT_MAIN": {
      "default_value": "1", 
      "field_size": "7", 
      "skip_form_refresh": "yes", 
      "explore_stop": "1000000", 
      "forbid_disable_at_random": "yes", 
      "sort_index": "1", 
      "explorable": "yes", 
      "explore_level": "1", 
      "desc_text": "Main function/kernel repetition", 
      "explore_start": "0", 
      "explore_step": "10", 
      "property": "yes", 
      "type": "integer"
    }
  }, 
  "cm_access_control": {
    "read_groups": "all", 
    "comments_groups": "admin", 
    "write_groups": "owner"
  }, 
  "run_vars": {
    "CT_REPEAT_MAIN": "1"
  }, 
  "cm_description": "cBench benchmark collection: http://cTuning.org/cbench", 
  "cm_build_dependencies": [], 
  "cm_display_as_alias": "cbench: consumer jpeg c", 
  "powered_by": {
    "version": "1.0.1977.beta", 
    "name": "Collective Mind Engine"
  }, 
  "cm_updated": [
    {
      "cm_iso_datetime": "2012-04-18T19:37:18.851000", 
      "cm_note": "", 
      "cm_module_uid": "45741e3fbcf4024b", 
      "cm_user_uoa": "0728a400aa1c86fe"
    }
  ], 
  "source_files": [
    "cdjpeg.c", 
    "cjpeg.c", 
    "ctuning-rtl.c", 
    "jcapimin.c", 
    "jcapistd.c", 
    "jccoefct.c", 
    "jccolor.c", 
    "jcdctmgr.c", 
    "jchuff.c", 
    "jcinit.c", 
    "jcmainct.c", 
    "jcmarker.c", 
    "jcmaster.c", 
    "jcomapi.c", 
    "jcparam.c", 
    "jcphuff.c", 
    "jcprepct.c", 
    "jcsample.c", 
    "jctrans.c", 
    "jdapimin.c", 
    "jdapistd.c", 
    "jdatadst.c", 
    "jdatasrc.c", 
    "jdcoefct.c", 
    "jdcolor.c", 
    "jddctmgr.c", 
    "jdhuff.c", 
    "jdinput.c", 
    "jdmainct.c", 
    "jdmarker.c", 
    "jdmaster.c", 
    "jdmerge.c", 
    "jdphuff.c", 
    "jdpostct.c", 
    "jdsample.c", 
    "jdtrans.c", 
    "jerror.c", 
    "jfdctflt.c", 
    "jfdctfst.c", 
    "jfdctint.c", 
    "jidctflt.c", 
    "jidctfst.c", 
    "jidctint.c", 
    "jidctred.c", 
    "jmemansi.c", 
    "jmemmgr.c", 
    "jquant1.c", 
    "jquant2.c", 
    "jutils.c", 
    "rdbmp.c", 
    "rdgif.c", 
    "rdppm.c", 
    "rdrle.c", 
    "rdswitch.c", 
    "rdtarga.c"
  ], 
  "source_files_templates": [
    "ctuning-rtl.c"
  ], 
  "target_file": "a", 
  "build_scripts_names": {
    "static": {
      "build_static_bin_c_through_link": "Build static binary from C sources through object files and linking", 
      "build_static_bin_c_through_asm": "Build static binary from C sources through assembler", 
      "build_static_bin_c_through_bc": "Build static binary from C sources through LLVM BC", 
      "build_static_bin_c": "Build static binary directly"
    }, 
    "dynamic": {
      "build_dynamic_bin_c_through_asm": "Build dynamic binary from C sources through assembler", 
      "build_dynamic_bin_c_through_bc": "Build dynamic binary from C sources through LLVM BC", 
      "build_dynamic_bin_c": "Build dynamic binary directly", 
      "build_dynamic_bin_c_through_link": "Build dynamic binary from C sources through object files and linking"
    }
  }
}